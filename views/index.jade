html
head
    title
    link(href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css", rel="stylesheet")
    block script
        //- script(src='auth', type='text/javascript')
        script(src='https://webrtc.voxbone.com/js/voxbone-0.0.2.js', type='text/javascript')
        script(src='https://webrtc.voxbone.com/js/jssip-0.3.0.js', type='text/javascript')
        script(src='http://code.jquery.com/jquery-latest.min.js', type='text/javascript')
        script(type='text/javascript').
              var tones = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "#", "*"];
              var eventHandlers = {
                  'progress':   function(e){ document.getElementById("status_message").innerHTML="Calling " + document.getElementById('number').value;},
                  'failed':     function(e){ document.getElementById("status_message").innerHTML="<b><font color='red'>Failed to connect: " + e.data.cause + "</font></b>"},
                  'started':    function(e){ document.getElementById("status_message").innerHTML="<b><font color='green'>In Call</font></b>"; },
                  'ended':      function(e){ document.getElementById("status_message").innerHTML="<b><font color='red'>Call Ended</font></b>"; }
              };
              function sendTone(b){
                document.getElementById("status_message").innerHTML="DTMF Sent: " + b.innerHTML;
              };
              /** This part is required as it handle Voxbone WebRTC initialization **/
              function init(){
                  // Set the webrtc auth server url (url below it the default one)
                  voxbone.WebRTC.authServerURL = "https://webrtc.voxbone.com/rest/authentication/createToken";
                  // Force the preferedPop to TEST.
                  //This can be usefull if you need  to get your webrtc calls troubleshooted
                  //If this is not set, a ping to each pop will be issued to determine which is the most optimal for the user
                  //Default is to use the ping mechanism to determine the preferedPop.
                  //voxbone.WebRTC.preferedPop = 'BE';
                  // set custom event handlers
                  voxbone.WebRTC.customEventHandler = eventHandlers;
                  //Set the caller-id, domain name gets automatically stripped off
                  //Note that It must be a valid sip uri.
                  //Default value is: voxrtc@voxbone.com
                  voxbone.WebRTC.configuration.uri = "Yo_Browser@voxbone.com";
                  //Bootstrap Voxbone WebRTC javascript object
                  voxbone.WebRTC.init(#{voxrtc_config});
              }
              /** Optional part, only use to play with mute **/
              function toggleMute(){
                  var button = document.getElementById("mute");
                  if( voxbone.WebRTC.isMuted ){
                      voxbone.WebRTC.unmute();
                      button.innerHTML = "Mute";
                  }else{
                      voxbone.WebRTC.mute();
                      button.innerHTML = "Unmute";
                  }
              }
    block content

      //
         invoke init() method when page is initializing
      body(onload='init();' style="text-align:center")
        h1 Voxbone Click2Call
        .container(style="width:200px; margin-top:10%;")
          form
            //
               input text which holds the number to dial
            input#number.btn-block.form-control.input-lg(type='tel' placeholder="Enter an E164" style="text-align:center")
            //
               place a call using voxbone webrtc js lib
            button.btn.btn-success.btn-lg.btn-block(type='button', onclick='voxbone.WebRTC.call(document.getElementById(\'number\').value);') Dial
              span.glyphicon.glyphicon-earphone.pull-left

            //
               hangup the current call in progress
            button.btn.btn-danger.btn-lg.btn-block(type='button', onclick='voxbone.WebRTC.hangup();') Hangup
              span.glyphicon.glyphicon-remove.pull-left

            //
               toggle mute ON/OFF
            button#mute.btn.btn-link.btn-block(type='button', onclick='toggleMute()') Mute
            br
            #status_message
              p Initializing configuration
          #dial_pad
            div
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[1]); sendTone(this);') 1
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[2]); sendTone(this);') 2
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[3]); sendTone(this);') 3
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[4]); sendTone(this);') 4
            div
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[5]); sendTone(this);') 5
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[6]); sendTone(this);') 6
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[7]); sendTone(this);') 7
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[8]); sendTone(this);') 8
            div
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[0]; sendTone(this);)') 0
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[9]); sendTone(this);') 9
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[11]); sendTone(this);') *
              button.btn.btn-default(type='button', onclick='voxbone.WebRTC.sendDTMF(tones[10]); sendTone(this);') #
